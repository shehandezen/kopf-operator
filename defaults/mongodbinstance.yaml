spec:
  replicas: 1
  container:
    name: "{{ name }}"
    image: mongo:6.0
    ports:
      - containerPort: 27017
    env:
      - name: MONGO_INITDB_ROOT_USERNAME
        valueFrom:
          secretKeyRef:
            name: "{{ name }}-secrets"
            key: mongo-root-username
      - name: MONGO_INITDB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ name }}-secrets"
            key: mongo-root-password
    volumeMounts:
      - name: "{{ name }}-data"
        mountPath: /data/db
    resources:
      limits:
        memory: "1Gi"
        cpu: "500m"
      requests:
        memory: "512Mi"
        cpu: "250m"
    livenessProbe:
      exec:
        command:
          - mongosh
          - --eval
          - "db.adminCommand('ping')"
      initialDelaySeconds: 30
      periodSeconds: 10
    readinessProbe:
      exec:
        command:
          - mongosh
          - --eval
          - "db.adminCommand('ping')"
      initialDelaySeconds: 10
      periodSeconds: 5
  volumes:
    - name: "{{ name }}-data"
      persistentVolumeClaim:
        claimName: "{{ name }}-pvc"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - "{{ name }}"
            topologyKey: kubernetes.io/hostname
  service:
    type: ClusterIP
    selector:
      app: "{{ name }}"
    ports:
      - port: 27017
        targetPort: 27017
  pvc:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
    storageClassName: standard
