spec:
  replicas: 1
  container:
    name: "{{name}}"
    image: registry:2
    ports:
      - containerPort: 443                   
    env:
      - name: REGISTRY_HTTP_ADDR
        value: "0.0.0.0:443"                          
      - name: REGISTRY_HTTP_TLS_CERTIFICATE
        value: /certs/tls.crt                  
      - name: REGISTRY_HTTP_TLS_KEY
        value: /certs/tls.key                   
      - name: REGISTRY_HTTP_SECRET
        valueFrom:
          secretKeyRef:
            name: "{{ name }}-secrets"
            key: registry-http-secret
      - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
        value: /var/lib/registry
      - name: REGISTRY_AUTH
        value: htpasswd
      - name: REGISTRY_AUTH_HTPASSWD_REALM
        value: Registry Realm
      - name: REGISTRY_AUTH_HTPASSWD_PATH
        value: /auth/htpasswd
    volumeMounts:
      - name: "{{ name }}-storage"
        mountPath: /var/lib/registry
      - name: "{{ name }}-auth-volume"
        mountPath: /auth
      - name: "{{ name }}-tls"
        mountPath: /certs                        
        readOnly: true
    livenessProbe:
      tcpSocket:
        port: 443
      initialDelaySeconds: 60
      periodSeconds: 10
    readinessProbe:
      tcpSocket:
        port: 443
      initialDelaySeconds: 60
      periodSeconds: 5
  volumes:
    - name: "{{ name }}-storage"
      persistentVolumeClaim:
        claimName: "{{ name }}-pvc"
    - name: "{{ name }}-auth-volume"
      secret:
        secretName: "{{ name }}-auth"
    - name: "{{ name }}-tls"
      secret:
        secretName: "{{ name }}-tls-secret"       
  pvc:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: standard
  service:
    selector:
      app: "{{ name }}"
    ports:
      - port: 5443
        targetPort: 443                     
